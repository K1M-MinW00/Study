#include<iostream>
#include <queue>

using namespace std;

int main()
{
    int T;
    cin >> T;

    for(int test_case = 1;test_case<=T;test_case++)
    {
        priority_queue<int> maxpq; // 중간값보다 작은 숫자들로 MaxHeap
        priority_queue<int,vector<int>,greater<int>> minpq; // 중간값보다 큰 숫자들로 MinHeap
        int N,A;
        cin >> N >> A;
        maxpq.push(A);
        long long answer = 0;
        for(int i=1;i<=N;i++)
        {
            int X,Y;
            cin >> X >> Y;
            
            if(maxpq.top()>X) // maxpq.top(중간값보다 작은 숫자들 중 가장 큰 숫자)보다 작다
            {
                maxpq.push(X);
                if(maxpq.size() > minpq.size()+1) // maxheap 과 minheap 크기 차이가 1 이하 되도록 유지
                {
                    int temp = maxpq.top(); // MaxHeap 에서 가장 큰 값을
                    maxpq.pop();
                    minpq.push(temp); // MinHeap 으로 이동
                }
            }
            else // maxpq.top 보다 크다
            {
                minpq.push(X);
                if(maxpq.size()<minpq.size()) // maxheap 이 minheap 보다 더 크게 유지
                {
                    int temp = minpq.top(); // MinHeap 에서 가장 작은 값을
                    minpq.pop();
                    maxpq.push(temp); // MaxHeap 으로 이동
                }
            }

            if(maxpq.top()>Y) // 위 코드 동일
            {
                maxpq.push(Y);
                if(maxpq.size() > minpq.size()+1)
                {
                    int temp = maxpq.top();
                    maxpq.pop();
                    minpq.push(temp);
                }
            }
            else
            {
                minpq.push(Y);
                if(maxpq.size()<minpq.size())
                {
                    int temp = minpq.top();
                    minpq.pop();
                    maxpq.push(temp);
                }
            }

            int mid = maxpq.top(); // 항상 2개씩 입력하므로, maxpq 크기가 하나 더 큼
            // minpq : 중앙값보다 큰 숫자들로 오름차순 정렬
            // maxpq : 중앙값보다 작은 숫자들로 내림차순 정렬 -> maxpq 가 하나 더 많으므로, maxpq.top 이 전체 수의 중앙값
            answer += mid;
        }
        answer %= 20171109;
        cout << '#' << test_case << ' ' << answer << endl;
    }
}
