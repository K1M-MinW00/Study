// 문제 : https://school.programmers.co.kr/learn/courses/30/lessons/17677

#include <string>
#include <algorithm>
#include <map>
#include <iostream>
using namespace std;

bool isEnglish(char str) // 문자가 알파벳인지 아닌지
{
    if(65<=str && str<=90)
        return true;
    else if(97 <=str && str<=122)
        return true;
    else
        return false;
}

int solution(string str1, string str2) {
    int answer = 0;
    float j;
    
    vector<string> m1;
    vector<string> m2;
    vector<string> m;

    for(int i=0;i<str1.size()-1;i++)
    {
        if(isEnglish(str1[i]) && isEnglish(str1[i+1]))
        {
            string s;
            s +=tolower(str1[i]);
            s +=tolower(str1[i+1]);
            m1.push_back(s);
        }
    }
    
    for(int i=0;i<str2.size()-1;i++)
    {
        if(isEnglish(str2[i]) && isEnglish(str2[i+1]))
        {
            string s;
            s +=tolower(str2[i]);
            s +=tolower(str2[i+1]);
            m2.push_back(s);
        }
    }
    
    int max = m1.size() + m2.size();
    int min = 0;
    
    if(m1.size()>m2.size())
    {
        for(int i=0;i<m2.size();i++) // 원소 개수가 작은 백터 확인
        {
            auto iter = find(m1.begin(),m1.end(),m2[i]); // m1 내에 m2[i]의 원소가 있는지 확인
            if(iter != m1.end())
            {
                min++; // 교집합 원소
                m1.erase(iter); // 같은 원소는 삭제
            }
            
        }
        
    }
    else
    {
        for(int i=0;i<m1.size();i++)
        {
            auto iter = find(m2.begin(),m2.end(),m1[i]); //m2 내에 m1[i]의 원소가 있는지 확인
            if(iter != m2.end())
            {
                min++;
                m2.erase(iter);
            }
            
        }
    }
    
    max -= min; // 교집합 원소 제거
    
    if(max == 0)
        return 65536;
    
    j = float(min)/float(max);
    answer =  j*65536;
    return answer;
}
// 출처: 프로그래머스 코딩 테스트 연습, https://school.programmers.co.kr/learn/challenges
