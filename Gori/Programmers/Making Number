// 문제 : https://school.programmers.co.kr/learn/courses/30/lessons/154538

#include <string>
#include <vector>
#include <queue>
using namespace std;

vector<bool> visited(1000001);
int solution(int x, int y, int n)
{
	int answer = -1;

	if (x == y)
		return 0;

	queue<pair<int, int>> q; // number - cnt
	q.push({x, 0});

	while (!q.empty())
	{
		int cur = q.front().first;
		int cnt = q.front().second;
		q.pop();

		if (cur + n <= y && visited[cur + n] == false) // x + n => y
		{
			visited[cur + n] = true;
			if (cur + n == y)
				return cnt + 1;
			q.push({cur + n, cnt + 1});
		}
		if (cur * 2 <= y && visited[cur * 2] == false) // x * 2 => y
		{
			visited[cur * 2] = true;
			if (cur * 2 == y)
				return cnt + 1;
			q.push({cur * 2, cnt + 1});
		}
		if (cur * 3 <= y && visited[cur * 3] == false) // x * 3 => y
		{
			visited[cur * 3] = true;
			if (cur * 3 == y)
				return cnt + 1;
			q.push({cur * 3, cnt + 1});
		}
	}

	return answer;
}
