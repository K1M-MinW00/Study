/*
코딩테스트 참여 개발언어 항목에 cpp, java, python 중 하나를 선택해야 합니다.
지원 직군 항목에 backend와 frontend 중 하나를 선택해야 합니다.
지원 경력구분 항목에 junior와 senior 중 하나를 선택해야 합니다.
선호하는 소울푸드로 chicken과 pizza 중 하나를 선택해야 합니다.
인재영입팀에 근무하고 있는 니니즈는 코딩테스트 결과를 분석하여 채용에 참여한 개발팀들에 제공하기 위해
지원자들의 지원 조건을 선택하면 해당 조건에 맞는 지원자가 몇 명인 지 쉽게 알 수 있는 도구를 만들고 있습니다.
예를 들어, 개발팀에서 궁금해하는 문의사항은 다음과 같은 형태가 될 수 있습니다.
코딩테스트에 java로 참여했으며, backend 직군을 선택했고, junior 경력이면서, 소울푸드로 pizza를 선택한 사람 중 코딩테스트 점수를 50점 이상 받은 지원자는 몇 명인가?

[문제]
지원자가 지원서에 입력한 4가지의 정보와 획득한 코딩테스트 점수를 하나의 문자열로 구성한 값의 배열 info,
개발팀이 궁금해하는 문의조건이 문자열 형태로 담긴 배열 query가 매개변수로 주어질 때,
각 문의조건에 해당하는 사람들의 숫자를 순서대로 배열에 담아 return 하도록 solution 함수를 완성해 주세요.

[제한사항]
info 배열의 크기는 1 이상 50,000 이하입니다.
info 배열 각 원소의 값은 "개발언어 직군 경력 소울푸드 점수" 형식입니다.
개발언어는 cpp, java, python 중 하나입니다.
직군은 backend, frontend 중 하나입니다.
경력은 junior, senior 중 하나입니다.
소울푸드는 chicken, pizza 중 하나입니다.
점수는 코딩테스트 점수를 의미하며, 1 이상 100,000 이하인 자연수입니다.
각 단어는 공백문자(스페이스 바) 하나로 구분되어 있습니다.

query 배열의 크기는 1 이상 100,000 이하입니다.
query의 각 문자열은 "[조건] X" 형식입니다.
[조건]은 "개발언어 and 직군 and 경력 and 소울푸드" 형식의 문자열입니다.
언어는 cpp, java, python, - 중 하나입니다.
직군은 backend, frontend, - 중 하나입니다.
경력은 junior, senior, - 중 하나입니다.
소울푸드는 chicken, pizza, - 중 하나입니다.
'-' 표시는 해당 조건을 고려하지 않겠다는 의미입니다.
X는 코딩테스트 점수를 의미하며 조건을 만족하는 사람 중 X점 이상 받은 사람은 모두 몇 명인지를 의미합니다.
각 단어는 공백문자(스페이스 바) 하나로 구분되어 있습니다.
*/

#include <string>
#include <vector>
#include <sstream>
using namespace std;

vector<int> solution(vector<string> info, vector<string> query)
{
    vector<int> answer;

    string token;
    vector<string> data; // info[i] 를 data[5*i ~ 5*i+4] 에 저장

    int cnt = 0;
    for (int j = 0; j < info.size(); j++)
    {
        stringstream sss(info[j]);
        while (sss >> token) // 띄어쓰기를 제외한 token 을 data 에 저장
            data.push_back(token);
    }

    // for (int i = 0; i < data.size(); i++)
    // {
    //     if (i % 5 == 0)
    //         cout << endl;
    //     cout << data[i] << ' ';
    // }
    // cout << endl;
    for (int i = 0; i < query.size(); i++)
    {
        vector<string> condition; // query[k] 를 condition[5*k ~ 5*k+4] 에 저장
        stringstream ss(query[i]);

        while (ss >> token)
        {
            if (token != "and")
                condition.push_back(token);
        }
        // cout << "condition : "; 조건문 추출 확인 용도
        // for (int k = 0; k < condition.size(); k++)
        // {
        //     cout << condition[k] << ' ';
        // }
        // cout << endl;

        int cnt = 0;
        for (int j = 0; j < data.size(); j += 5)
        {
            if (condition[0][0] == data[j][0] || condition[0][0] == '-')
            {
                if (condition[1][0] == data[j + 1][0] || condition[1][0] == '-')
                {
                    if (condition[2][0] == data[j + 2][0] || condition[2][0] == '-')
                    {
                        if (condition[3][0] == data[j + 3][0] || condition[3][0] == '-')
                        {
                            if (stoi(condition[4]) <= stoi(data[j + 4]) || condition[4][0] == '-')
                                cnt++;
                        }
                    }
                }
            }
        }
        answer.push_back(cnt);
    }

    return answer;
}

// 정확도 부분에서는 100%, 효율성 부분에서 시간 초과 -> 시간 복잡도 개선 필요
//출처: 프로그래머스 코딩 테스트 연습, https://school.programmers.co.kr/learn/challenges
