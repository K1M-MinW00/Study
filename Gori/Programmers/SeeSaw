/*
어느 공원 놀이터에는 시소가 하나 설치되어 있습니다. 이 시소는 중심으로부터 2(m), 3(m), 4(m) 거리의 지점에 좌석이 하나씩 있습니다.
이 시소를 두 명이 마주 보고 탄다고 할 때, 시소가 평형인 상태에서 각각에 의해 시소에 걸리는 토크의 크기가 서로 상쇄되어 완전한 균형을 이룰 수 있다면 그 두 사람을 시소 짝꿍이라고 합니다.
 즉, 탑승한 사람의 무게와 시소 축과 좌석 간의 거리의 곱이 양쪽 다 같다면 시소 짝꿍이라고 할 수 있습니다.
사람들의 몸무게 목록 weights이 주어질 때, 시소 짝꿍이 몇 쌍 존재하는지 구하여 return 하도록 solution 함수를 완성해주세요.
*/
#include <string>
#include <vector>
#include <algorithm>
using namespace std;

long long solution(vector<int> weights)
{
    long long answer = 0;

    sort(weights.begin(), weights.end());

    for (int i = 1; i < weights.size(); i++)
    {
        for (int j = 0; j < i; j++) // weights[j] <= weights[i]
        {
            if (2 * weights[j] == weights[i]) // 2:4 = w_j : w_i
                answer++;
            else if (weights[j] == weights[i]) // 2:2 = 3:3 = 4:4 = w_i : w_j
                answer++;
            else if (3 * weights[j] == 2 * weights[i]) // 2:3 = w_j : w_i
                answer++;
            else if (4 * weights[j] == 3 * weights[i]) // 3:4 = w_j : w_i
                answer++;
        }
    }
    return answer;
}
