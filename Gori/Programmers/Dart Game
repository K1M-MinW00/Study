/*
갓 입사한 무지는 코딩 실력을 인정받아 게임의 핵심 부분인 점수 계산 로직을 맡게 되었다. 다트 게임의 점수 계산 로직은 아래와 같다.

다트 게임은 총 3번의 기회로 구성된다.
각 기회마다 얻을 수 있는 점수는 0점에서 10점까지이다.
점수와 함께 Single(S), Double(D), Triple(T) 영역이 존재하고 각 영역 당첨 시 점수에서 1제곱, 2제곱, 3제곱 (점수1 , 점수2 , 점수3 )으로 계산된다.
옵션으로 스타상(*) , 아차상(#)이 존재하며 스타상(*) 당첨 시 해당 점수와 바로 전에 얻은 점수를 각 2배로 만든다. 아차상(#) 당첨 시 해당 점수는 마이너스된다.
스타상(*)은 첫 번째 기회에서도 나올 수 있다. 이 경우 첫 번째 스타상(*)의 점수만 2배가 된다. (예제 4번 참고)
스타상(*)의 효과는 다른 스타상(*)의 효과와 중첩될 수 있다. 이 경우 중첩된 스타상(*) 점수는 4배가 된다. (예제 4번 참고)
스타상(*)의 효과는 아차상(#)의 효과와 중첩될 수 있다. 이 경우 중첩된 아차상(#)의 점수는 -2배가 된다. (예제 5번 참고)
Single(S), Double(D), Triple(T)은 점수마다 하나씩 존재한다.
스타상(*), 아차상(#)은 점수마다 둘 중 하나만 존재할 수 있으며, 존재하지 않을 수도 있다.
0~10의 정수와 문자 S, D, T, *, #로 구성된 문자열이 입력될 시 총점수를 반환하는 함수를 작성하라.

입력 형식
"점수|보너스|[옵션]"으로 이루어진 문자열 3세트.
예) 1S2D*3T

점수는 0에서 10 사이의 정수이다.
보너스는 S, D, T 중 하나이다.
옵선은 *이나 # 중 하나이며, 없을 수도 있다.
출력 형식
3번의 기회에서 얻은 점수 합계에 해당하는 정수값을 출력한다.
예) 37
*/
#include <string>
#include <vector>
#include <iostream>
using namespace std;

int solution(string dartResult)
{
    int answer = 0;
    vector<int> temp;
    int t;
    char op;
    while (dartResult.length() > 0)
    {
        if (dartResult[0] == '1' && dartResult[1] == '0') // 점수가 10일 때, 예외 처리
        {
            t = 10;
            dartResult.erase(0, 2);
        }
        else // 점수가 0 ~ 9일 때,
        {
            t = dartResult[0] - '0';
            dartResult.erase(0, 1);
        }

        op = dartResult[0];
        dartResult.erase(0, 1);

        if (op == 'D') // 제곱
            t = t * t;
        else if (op == 'T') // 세제곱
            t = t * t * t;
       
        if (dartResult[0] == '*') // 스타상
        {
            if (!temp.empty())
                temp.back() *= 2;
            t *= 2;
            temp.push_back(t);
            dartResult.erase(0, 1);
        }
        else if (dartResult[0] == '#') // 아차상
        {
            t *= -1;
            temp.push_back(t);
            dartResult.erase(0, 1);
        }
        else
            temp.push_back(t);
    }

    for (int i = 0; i < temp.size(); i++)
        answer += temp[i];

    // cout << answer ;
    return answer;
}
// 출처: 프로그래머스 코딩 테스트 연습, https://school.programmers.co.kr/learn/challenges
