알고리즘에 도전해보는 두 가지 방식
  1) 문제를 푸는 더 효율적인 알고리즘을 설계하는 것
  2) 더 효율적인 알고리즘 개발이 불가능함을 증명하는 것 -> 더 빠른 알고리즘의 개발을 시도할 가치가 없어짐

시간복잡도
  - lower bound : Omega( f(n) ) / 문제를 푸는 알고리즘 중 Theta( f(n) ) 보다 빠른 알고리즘을 만드는 것이 불가능함을 의미

공간복잡도
  - 제자리 정렬(In-place sort) : 추가적으로 사용하는 저장 장소가 상수일 때
